// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Modal testing Modal visible none Modal visible snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    closeModal={[MockFunction]}
    createFolderRequest={[MockFunction]}
    modal={
      Object {
        "isOpen": true,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="modal-dialog modal-dialog-centered"
      >
        <div
          className="modal-content"
        >
          <div
            className="modal-header"
          >
            <h5
              className="modal-title"
            >
              Наименование папки
            </h5>
            <button
              className="close"
              onClick={[Function]}
              type="button"
            >
              <span>
                ×
              </span>
            </button>
          </div>
          <div
            className="modal-body"
          >
            <input
              className="form-control"
              onChange={[Function]}
              type="text"
              value=""
            />
          </div>
          <div
            className="modal-footer"
          >
            <button
              className="btn btn-secondary"
              id="closeModal"
              onClick={[Function]}
              type="button"
            >
              Закрыть
            </button>
            <button
              className="btn btn-primary"
              id="CreateFolder"
              onClick={[Function]}
              type="button"
            >
              Создать
            </button>
          </div>
        </div>
      </div>,
      "className": "modal fadeIn",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="modal-content"
        >
          <div
            className="modal-header"
          >
            <h5
              className="modal-title"
            >
              Наименование папки
            </h5>
            <button
              className="close"
              onClick={[Function]}
              type="button"
            >
              <span>
                ×
              </span>
            </button>
          </div>
          <div
            className="modal-body"
          >
            <input
              className="form-control"
              onChange={[Function]}
              type="text"
              value=""
            />
          </div>
          <div
            className="modal-footer"
          >
            <button
              className="btn btn-secondary"
              id="closeModal"
              onClick={[Function]}
              type="button"
            >
              Закрыть
            </button>
            <button
              className="btn btn-primary"
              id="CreateFolder"
              onClick={[Function]}
              type="button"
            >
              Создать
            </button>
          </div>
        </div>,
        "className": "modal-dialog modal-dialog-centered",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="modal-header"
            >
              <h5
                className="modal-title"
              >
                Наименование папки
              </h5>
              <button
                className="close"
                onClick={[Function]}
                type="button"
              >
                <span>
                  ×
                </span>
              </button>
            </div>,
            <div
              className="modal-body"
            >
              <input
                className="form-control"
                onChange={[Function]}
                type="text"
                value=""
              />
            </div>,
            <div
              className="modal-footer"
            >
              <button
                className="btn btn-secondary"
                id="closeModal"
                onClick={[Function]}
                type="button"
              >
                Закрыть
              </button>
              <button
                className="btn btn-primary"
                id="CreateFolder"
                onClick={[Function]}
                type="button"
              >
                Создать
              </button>
            </div>,
          ],
          "className": "modal-content",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h5
                  className="modal-title"
                >
                  Наименование папки
                </h5>,
                <button
                  className="close"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    ×
                  </span>
                </button>,
              ],
              "className": "modal-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Наименование папки",
                  "className": "modal-title",
                },
                "ref": null,
                "rendered": "Наименование папки",
                "type": "h5",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span>
                    ×
                  </span>,
                  "className": "close",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "×",
                  },
                  "ref": null,
                  "rendered": "×",
                  "type": "span",
                },
                "type": "button",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <input
                className="form-control"
                onChange={[Function]}
                type="text"
                value=""
              />,
              "className": "modal-body",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "form-control",
                "onChange": [Function],
                "type": "text",
                "value": "",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <button
                  className="btn btn-secondary"
                  id="closeModal"
                  onClick={[Function]}
                  type="button"
                >
                  Закрыть
                </button>,
                <button
                  className="btn btn-primary"
                  id="CreateFolder"
                  onClick={[Function]}
                  type="button"
                >
                  Создать
                </button>,
              ],
              "className": "modal-footer",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Закрыть",
                  "className": "btn btn-secondary",
                  "id": "closeModal",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Закрыть",
                "type": "button",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Создать",
                  "className": "btn btn-primary",
                  "id": "CreateFolder",
                  "onClick": [Function],
                  "type": "button",
                },
                "ref": null,
                "rendered": "Создать",
                "type": "button",
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="modal-dialog modal-dialog-centered"
        >
          <div
            className="modal-content"
          >
            <div
              className="modal-header"
            >
              <h5
                className="modal-title"
              >
                Наименование папки
              </h5>
              <button
                className="close"
                onClick={[Function]}
                type="button"
              >
                <span>
                  ×
                </span>
              </button>
            </div>
            <div
              className="modal-body"
            >
              <input
                className="form-control"
                onChange={[Function]}
                type="text"
                value=""
              />
            </div>
            <div
              className="modal-footer"
            >
              <button
                className="btn btn-secondary"
                id="closeModal"
                onClick={[Function]}
                type="button"
              >
                Закрыть
              </button>
              <button
                className="btn btn-primary"
                id="CreateFolder"
                onClick={[Function]}
                type="button"
              >
                Создать
              </button>
            </div>
          </div>
        </div>,
        "className": "modal fadeIn",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="modal-content"
          >
            <div
              className="modal-header"
            >
              <h5
                className="modal-title"
              >
                Наименование папки
              </h5>
              <button
                className="close"
                onClick={[Function]}
                type="button"
              >
                <span>
                  ×
                </span>
              </button>
            </div>
            <div
              className="modal-body"
            >
              <input
                className="form-control"
                onChange={[Function]}
                type="text"
                value=""
              />
            </div>
            <div
              className="modal-footer"
            >
              <button
                className="btn btn-secondary"
                id="closeModal"
                onClick={[Function]}
                type="button"
              >
                Закрыть
              </button>
              <button
                className="btn btn-primary"
                id="CreateFolder"
                onClick={[Function]}
                type="button"
              >
                Создать
              </button>
            </div>
          </div>,
          "className": "modal-dialog modal-dialog-centered",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="modal-header"
              >
                <h5
                  className="modal-title"
                >
                  Наименование папки
                </h5>
                <button
                  className="close"
                  onClick={[Function]}
                  type="button"
                >
                  <span>
                    ×
                  </span>
                </button>
              </div>,
              <div
                className="modal-body"
              >
                <input
                  className="form-control"
                  onChange={[Function]}
                  type="text"
                  value=""
                />
              </div>,
              <div
                className="modal-footer"
              >
                <button
                  className="btn btn-secondary"
                  id="closeModal"
                  onClick={[Function]}
                  type="button"
                >
                  Закрыть
                </button>
                <button
                  className="btn btn-primary"
                  id="CreateFolder"
                  onClick={[Function]}
                  type="button"
                >
                  Создать
                </button>
              </div>,
            ],
            "className": "modal-content",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <h5
                    className="modal-title"
                  >
                    Наименование папки
                  </h5>,
                  <button
                    className="close"
                    onClick={[Function]}
                    type="button"
                  >
                    <span>
                      ×
                    </span>
                  </button>,
                ],
                "className": "modal-header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Наименование папки",
                    "className": "modal-title",
                  },
                  "ref": null,
                  "rendered": "Наименование папки",
                  "type": "h5",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": <span>
                      ×
                    </span>,
                    "className": "close",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "×",
                    },
                    "ref": null,
                    "rendered": "×",
                    "type": "span",
                  },
                  "type": "button",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <input
                  className="form-control"
                  onChange={[Function]}
                  type="text"
                  value=""
                />,
                "className": "modal-body",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "className": "form-control",
                  "onChange": [Function],
                  "type": "text",
                  "value": "",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <button
                    className="btn btn-secondary"
                    id="closeModal"
                    onClick={[Function]}
                    type="button"
                  >
                    Закрыть
                  </button>,
                  <button
                    className="btn btn-primary"
                    id="CreateFolder"
                    onClick={[Function]}
                    type="button"
                  >
                    Создать
                  </button>,
                ],
                "className": "modal-footer",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Закрыть",
                    "className": "btn btn-secondary",
                    "id": "closeModal",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Закрыть",
                  "type": "button",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Создать",
                    "className": "btn btn-primary",
                    "id": "CreateFolder",
                    "onClick": [Function],
                    "type": "button",
                  },
                  "ref": null,
                  "rendered": "Создать",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Modal testing Modal visible none snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Modal
    modal={
      Object {
        "isOpen": false,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): null,
  Symbol(enzyme.__nodes__): Array [
    null,
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
